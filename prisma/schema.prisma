// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Korisnik {
  id           Int                @id @default(autoincrement())
  ime          String
  prezime      String
  email        String             @unique
  hash         String
  admin        Boolean
  projekti     VoditeljProjekta[]
  izvrsitelj   Zadatak[]          @relation("izvrsitelj")
  izvjestitelj Zadatak[]          @relation("izvjestitelj")
  komentar     Komentar[]
}

model Projekt {
  id             Int                @id @default(autoincrement())
  naziv          String
  datumPocetka   DateTime           @default(now())
  datumZavrsetka DateTime?
  status         StatusProjekta     @default(U_TIJEKU)
  voditelji      VoditeljProjekta[]
  zadaci         Zadatak[]
}

model VoditeljProjekta {
  korisnik   Korisnik @relation(fields: [korisnikId], references: [id])
  korisnikId Int
  projekt    Projekt  @relation(fields: [projektId], references: [id])
  projektId  Int

  @@id([korisnikId, projektId])
}

model Zadatak {
  id             Int           @id @default(autoincrement())
  naziv          String
  opis           String
  projekt        Projekt       @relation(fields: [projektId], references: [id])
  projektId      Int
  izvrsitelj     Korisnik      @relation("izvrsitelj", fields: [izvrsiteljId], references: [id])
  izvrsiteljId   Int
  izvjestitelj   Korisnik      @relation("izvjestitelj", fields: [izvjestiteljId], references: [id])
  izvjestiteljId Int
  prioritet      Prioritet
  rok            DateTime
  status         StatusZadatka @default(U_IZRADI)
  datumIzrade    DateTime      @default(now())
  datumZavrsetka DateTime?
  privitci       Privitak[]
  komentari      Komentar[]
}

enum StatusZadatka {
  U_IZRADI    @map("U izradi")
  NA_PREGLEDU @map("Na pregledu")
  ZATVOREN    @map("Zatvoren")
}

enum StatusProjekta {
  U_TIJEKU @map("U tijeku")
  ZAVRSEN  @map("Zavr≈°en")
  OTKAZAN  @map("Otkazan")
}

enum Prioritet {
  NIZAK
  SREDNJI
  VISOK
  KRITICAN
}

model Privitak {
  putanja   String  @id
  naziv     String
  mimetype  String
  zadatakId Int
  zadatak   Zadatak @relation(fields: [zadatakId], references: [id])
}

model Komentar {
  id          Int      @id @default(autoincrement())
  sadrzaj     String
  korisnikId  Int
  korisnik    Korisnik @relation(fields: [korisnikId], references: [id])
  zadatakId   Int
  zadatak     Zadatak  @relation(fields: [zadatakId], references: [id])
  datumIzrade DateTime @default(now())
}
